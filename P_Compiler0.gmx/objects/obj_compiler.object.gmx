<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

//codigo escrito
var _n = 0;
      code[_n] = 'txt = "Hello ";';
_n++; code[_n] = 'txt += "World!";';
_n++; code[_n] = "x = 5 + 5;";
_n++; code[_n] = 'if txt = "Hello World!"';
_n++; code[_n] = "{";
_n++; code[_n] = "    y = 0;";
_n++; code[_n] = "    for(i = 1; i &lt; 5 || i = 5; i += 1)";
//_n++; code[_n] = "    while(y = -1 || y &lt; 10)";
_n++; code[_n] = "    {";
_n++; code[_n] = "        y += 1;";
_n++; code[_n] = "        x = (y = -1 || y &lt; 10);";
_n++; code[_n] = "    }";
_n++; code[_n] = "}";
/*_n++; code[_n] = "if x = 9.5+0.5";
_n++; code[_n] = "{";
_n++; code[_n] = "    if 2 &gt; 3";
_n++; code[_n] = "    {";
_n++; code[_n] = "        y = 5;";
_n++; code[_n] = "    }";
_n++; code[_n] = "    else";
_n++; code[_n] = "    {";
_n++; code[_n] = "        y = 10;";
_n++; code[_n] = "    }";
_n++; code[_n] = "    z = 3;";
_n++; code[_n] = "}";*/
_n++; code[_n] = "";

//codigo compilado
ifN = 0;
Im = 0;
cCode[] = 0;  //compilado
cvCode[] = 0; //convertido
cl[0] = ""; //consola
/*cCode[0] = "";  //compilado
cvCode[0] = ""; //convertido*/

//variables
val[0] = -1; //value
valId[0] = ""; //compilado
valNa[0] = ""; //escrito
valTot = 0;

//funciones
fucNa[0] = "if"
fucNa[1] = "else"
fucNa[2] = "while"
fucTot = 3;
//show_message(array_length_1d(fucNa))

//soporte
linKeyCursor = 0;
nLinKey = 0;
linKey[0, 0] = 0;
linKey[0, 1] = 0;
linKey[0, 2] = 0;
//nLinWhi = 0;
//linWhi[0] = 0;

//debug
executed[_n] = false;
lastLineExed = 0;
alarm[0] = room_speed;
start = false;


/*for(i = 1; i &lt;= 5; i += 1){
    show_debug_message(i);
}

var i = 1;
while(i &lt;= 5){
    show_debug_message(i);
i++    
}


var i = 1-1;
while(i &lt;= 5-1){
i++
    show_debug_message(i);
}

var i = 1-1;
while(i &lt;= 5-1)
{
i++
    show_debug_message(i);
}


game_end(); */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarma
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ejecutar

//ejecutar
if (keyboard_check_pressed(vk_f5)){ //(keyboard_check_pressed(vk_f5)){

    //limpiar variables
    valTot = 0;
    for(var i = 0; i &lt; valTot; i++){
        val[i] = -1;
        valId[i] = "";
    }   
    
    //limpiar debug
    for(var i = 0; i &lt;= array_length_1d(code); i++){
        executed[i] = false;
    }

    //exe
    //for(Im = 0; Im &lt; array_length_1d(code); Im++){
    Im = 0;
    if start
        start = false;
    else
        start = true;
        
    //}
    
      
}

///ejecutar
if (start and alarm[0] = -1){

    //Proceso
    alarm[0] = room_speed/8;
    executed[Im] = true;
    show_debug_message("Linea: "+string(Im));
    
    if (Im &lt; array_length_1d(cCode)){
        scr_exe(cCode[Im]);
        lastLineExed = Im;
        Im++
    }
    else{
        start = false;
    }
    
    //repasar variables
    //show_debug_message(" ");
    //show_debug_message("__________________________________________");
    for(var i = 0; i &lt; array_length_1d(val); i++){ //valTot
        cl[i] = string(i) + " | " + string(valId[i]) + " | " + string(val[i])+ " | " + string(valNa[i]);
        //show_debug_message(string(i) + " | " + string(valId[i]) + " | " + string(val[i])+ "   | " + string(valNa[i]));
    }  
}

//compilar
if (keyboard_check_pressed(vk_f6)){ 

    //convertir
    //for(var i = 0; i &lt; array_length_1d(code); i++){
    for(Im = 0; Im &lt; array_length_1d(code); Im++){
        scr_convCod(Im);
        //show_debug_message(cCode[i]);
    }
    //executed[array_length_1d(cCode)] = false;

    //compilar
    for(var i = 0; i &lt; array_length_1d(cvCode); i++){
    //for(Im = 0; Im &lt; array_length_1d(code); Im++){
        scr_recComp(i);
        //show_debug_message(cCode[i]);
    }
    executed[array_length_1d(cCode)] = false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debuger

if keyboard_check(vk_control){
    if keyboard_check_pressed(ord("R")){
        game_restart();
    }
    else if keyboard_check_pressed(vk_escape){
        game_end();
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar

//if keyboard_check(vk_anykey)
    scr_drawCode();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
